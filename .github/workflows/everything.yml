---
name: Run Tests & Publishing

on: [push, pull_request]

jobs:
  lint:
    name: Lint Codebase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
          profile: minimal

      - name: Restore Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Setup Rust wasm
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          profile: minimal

      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1

      - name: Run Lints
        run: cargo make lints

  build:
    name: Build Examples
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
          profile: minimal

      - name: Restore Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Setup Rust wasm
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          profile: minimal

      - name: Setup trunk
        uses: jetli/trunk-action@v0.1.0
        with:
          version: "latest"

      - name: Build Examples
        run: |
          for d in "examples/"*
          do
            trunk build --release $d/index.html
          done

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
          profile: minimal

      - name: Restore Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Setup Rust wasm
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          profile: minimal

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1

      - name: Run Tests
        run: cargo make tests

  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs:
      - lint
      - build
      - test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
          profile: minimal

      - name: Restore Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo publish --dry-run for bounce-macros
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --dry-run --manifest-path crates/bounce-macros/Cargo.toml
        env:
          RUSTFLAGS: "--cfg releasing"

      - name: Run cargo publish for bounce-macros
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --token ${{ secrets.CRATES_IO_TOKEN }} --manifest-path crates/bounce-macros/Cargo.toml
        env:
          RUSTFLAGS: "--cfg releasing"

      - name: Wait crates.io to Refresh
        run: sleep 30s
        shell: bash

      # Not possible if bounce-macros does not have a compatible version on crates.io
      # See: https://github.com/rust-lang/cargo/issues/1169
      # - name: Run cargo publish --dry-run for bounce
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: publish
      #     args: --dry-run --manifest-path crates/bounce/Cargo.toml
      #   env:
      #     RUSTFLAGS: "--cfg releasing"

      - name: Run cargo publish for bounce
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --token ${{ secrets.CRATES_IO_TOKEN }} --manifest-path crates/bounce/Cargo.toml
        env:
          RUSTFLAGS: "--cfg releasing"
